{"version":3,"sources":["components/LoadingIndicator.tsx","pages/Home.tsx","utils/checkUrl.ts","hooks/useAxios.tsx","pages/Loading.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoadingIndicatorWrapper","styled","Box","LoadingIndicator","title","CircularProgress","Typography","variant","HomeContainer","Form","form","Input","TextField","SubmitButton","Button","Home","useState","urlInput","setUrlInput","urlOutput","setUrlOutput","error","setError","loading","setLoading","handleSubmit","e","a","preventDefault","str","RegExp","test","axios","post","originalUrl","data","shortUrl","onSubmit","length","helperText","label","onChange","target","value","color","type","Alert","severity","to","window","location","href","useAxios","axiosParams","undefined","response","setResponse","fetchData","params","request","result","message","useEffect","Loading","useLocation","useMemo","method","url","pathname","slice","includes","MainContainer","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fda21dc.chunk.js","sourcesContent":["import { Box, CircularProgress, Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst LoadingIndicatorWrapper = styled(Box)`\n    height: 100%;\n    width: 100%;\n    background-color: grey;\n    opacity: 0.8;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 10;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\ntype LoadingIndicatorProps = {\n    title: string;\n};\n\nfunction LoadingIndicator({ title }: LoadingIndicatorProps): JSX.Element {\n    return (\n        <LoadingIndicatorWrapper>\n            <CircularProgress />\n            <Typography variant=\"caption\">{title}</Typography>\n        </LoadingIndicatorWrapper>\n    );\n}\n\nexport default LoadingIndicator;\n","import { Box, Button, TextField, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport validURL from '../utils/checkUrl';\n\nconst HomeContainer = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst Form = styled.form`\n    width: 60%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst Input = styled(TextField)`\n    && {\n        width: 40%;\n        margin: 10px;\n    }\n`;\nexport const SubmitButton = styled(Button)`\n    && {\n        margin: 10px;\n    }\n`;\n\nfunction Home(): JSX.Element {\n    // original url\n    const [urlInput, setUrlInput] = useState('');\n    // shortened url\n    const [urlOutput, setUrlOutput] = useState('');\n    // error\n    const [error, setError] = useState('');\n    // loading\n    const [loading, setLoading] = useState(false);\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (!urlInput) {\n            setError('Required');\n            return;\n        }\n\n        if (!validURL(urlInput)) {\n            setError('Please enter a valid URL');\n            return;\n        }\n\n        // clear error\n        if (error) {\n            setError('');\n        }\n\n        // create shortened URL\n        try {\n            setLoading(true);\n            const { data } = await axios.post('/api/shorten', { originalUrl: urlInput });\n            setUrlOutput(data.shortUrl);\n        } catch (err) {\n            setError(err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <HomeContainer>\n            <Typography variant=\"overline\">Say goodbye to long URLs!</Typography>\n\n            <Form onSubmit={(e) => handleSubmit(e)}>\n                <Input\n                    error={error.length > 0}\n                    helperText={error}\n                    label=\"Shorten your URL here\"\n                    onChange={(e) => setUrlInput(e.target.value)}\n                    value={urlInput}\n                />\n                <SubmitButton color=\"primary\" type=\"submit\" variant=\"contained\">\n                    Shorten\n                </SubmitButton>\n            </Form>\n\n            {loading && <LoadingIndicator title=\"Attemping to shorten the URL...\" />}\n\n            {urlOutput && (\n                <Alert severity=\"success\">\n                    This is your shortened URL:{' '}\n                    <Link to={urlOutput}>\n                        {window.location.href}\n                        {urlOutput}\n                    </Link>\n                </Alert>\n            )}\n        </HomeContainer>\n    );\n}\n\nexport default Home;\n","export default function validURL(str: string): boolean {\n    const pattern = new RegExp(\n        '^(https?:\\\\/\\\\/)?' + // protocol\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n            '(\\\\#[-a-z\\\\d_]*)?$',\n        'i'\n    ); // fragment locator\n    return !!pattern.test(str);\n}\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst useAxios = (\n    axiosParams: AxiosRequestConfig\n): { response: AxiosResponse | undefined; error: string; loading: boolean } => {\n    const [response, setResponse] = useState<AxiosResponse | undefined>(undefined);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    const fetchData = async (params: AxiosRequestConfig) => {\n        try {\n            const result = await axios.request(params);\n            setResponse(result);\n        } catch (err) {\n            setError(err.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData(axiosParams);\n    }, [axiosParams]); // execute once only\n\n    return { response, error, loading };\n};\n\nexport default useAxios;\n","import { Alert } from '@material-ui/lab';\nimport { Method } from 'axios';\nimport { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport useAxios from '../hooks/useAxios';\n\nfunction Loading(): JSX.Element {\n    const location = useLocation();\n\n    const params = useMemo(\n        () => ({\n            method: 'GET' as Method,\n            url: `/api/shorten?shortUrl=${location.pathname.slice(1)}`,\n        }),\n        [location]\n    );\n\n    const { response, error } = useAxios(params);\n\n    if (response && response.data) {\n        if (response.data.originalUrl.includes('http')) {\n            window.location.href = `${response.data.originalUrl}`;\n        } else {\n            window.location.href = `https://${response.data.originalUrl}`;\n        }\n    }\n\n    return (\n        <>\n            {!error && <LoadingIndicator title=\"Taking you to your destination...\" />}\n\n            {error && <Alert severity=\"error\">This short URL does not map to any URL </Alert>}\n        </>\n    );\n}\n\nexport default Loading;\n","import { Box } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Home from './pages/Home';\nimport Loading from './pages/Loading';\n\nconst MainContainer = styled(Box)`\n    padding: 30px;\n`;\n\nfunction App(): JSX.Element {\n    return (\n        <MainContainer>\n            <Router>\n                <Switch>\n                    <Route component={Home} path=\"/\" exact />\n                    <Route component={Loading} />\n                </Switch>\n            </Router>\n        </MainContainer>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}